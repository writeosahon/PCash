{"version":3,"sources":["controller.js"],"names":[],"mappings":"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","file":"controller-compiled.js","sourcesContent":["/**\r\n * Created by UTOPIA SOFTWARE on 20/03/2017.\r\n */\r\n\r\n/**\r\n * file defines all View-Models, Controllers and Event Listeners used by the app\r\n *\r\n * The 'utopiasoftware.saveup' namespace has being defined in the base js file.\r\n * The author uses the terms 'method' and function interchangeably; likewise the terms 'attribute' and 'property' are\r\n * also used interchangeably\r\n */\r\n\r\n\r\n// define the controller namespace\r\nutopiasoftware.saveup.controller = {\r\n\r\n    /**\r\n     * method is used to handle the special event created by the intel xdk developer library. The special event (app.Ready)\r\n     * is triggered when ALL the hybrid app pluigins have been loaded/readied and also the document DOM content is ready\r\n     */\r\n    appReady: () => {\r\n\r\n        // initialise the onsen library\r\n        ons.ready(function () {\r\n            // set the default handler for the app\r\n            ons.setDefaultDeviceBackButtonListener(function(){\r\n                console.log(\"DEFAULT BACK BUTTON LISTENER\");\r\n\r\n            });\r\n\r\n            if(utopiasoftware.saveup.model.isAppReady === false){ // if app has not completed loading\r\n                // displaying prepping message\r\n                $('#loader-modal-message').html(\"Preparing App...\");\r\n                $('#loader-modal').get(0).show(); // show loader\r\n            }\r\n\r\n            //set the first page to be displayed to be the login page\r\n            $('ons-splitter').get(0).content.load(\"login-template\");\r\n\r\n            // initialise verify-account bottom sheet plugin\r\n            $('#verify-account-bottom-sheet').modal({\r\n                ready: function(){ // callback for when bottom sheet is opened\r\n                    // flag a state that indicates the bottom sheet is currently open\r\n                    $('#verify-account-bottom-sheet').data(\"saveupSheetState\", \"open\");\r\n                },\r\n                complete: function(){ // callback for when bottom sheet is closed\r\n                    // flag a state that indicates the bottom sheet is currently closed\r\n                    $('#verify-account-bottom-sheet').data(\"saveupSheetState\", \"closed\");\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n        // add listener for when the Internet network connection is offline\r\n        document.addEventListener(\"offline\", function(){\r\n\r\n            // display a toast message to let user no there is no Internet connection\r\n            window.plugins.toast.showWithOptions({\r\n                message: \"No Internet Connection. App functionality may be limited\",\r\n                duration: 4000, // 2000 ms\r\n                position: \"bottom\",\r\n                styling: {\r\n                    opacity: 1,\r\n                    backgroundColor: '#000000',\r\n                    textColor: '#FFFFFF',\r\n                    textSize: 14\r\n                }\r\n            });\r\n\r\n        }, false);\r\n\r\n        try {\r\n            // lock the orientation of the device to 'PORTRAIT'\r\n            screen.lockOrientation('portrait');\r\n        }\r\n        catch(err){}\r\n\r\n        // set status bar color\r\n        StatusBar.backgroundColorByHexString(\"#000000\");\r\n\r\n        // use Promises to load the other cordova plugins\r\n        new Promise(function(resolve, reject){\r\n            // Get device UUID\r\n            window.plugins.uniqueDeviceID.get(resolve, reject);\r\n        }).\r\n        then(function(deviceUUID){\r\n            utopiasoftware.saveup.model.deviceUUID = deviceUUID;\r\n            return;\r\n        }).\r\n        then(function(){ // load the securely stored / encrypted data into the app\r\n            // check if the user is currently logged in\r\n            if(! window.localStorage.getItem(\"app-status\") || window.localStorage.getItem(\"app-status\") == \"\"){ // user is not logged in\r\n                return null;\r\n            }\r\n\r\n            return Promise.resolve(intel.security.secureStorage.read({\"id\": \"postcash-user-details\"}));\r\n        }).then(function(instanceId){\r\n            if(instanceId == null){ // user is not logged in\r\n                return null;\r\n            }\r\n\r\n            return Promise.resolve(intel.security.secureData.getData(instanceId));\r\n        }).\r\n        then(function(secureData){\r\n\r\n            if(secureData == null){ // user is not logged in\r\n                return null;\r\n            }\r\n\r\n            utopiasoftware.saveup.model.appUserDetails = JSON.parse(secureData); // transfer the collected user details to the app\r\n            // update the first name being displayed in the side menu\r\n            $('#side-menu-username').html(utopiasoftware.saveup.model.appUserDetails.firstName);\r\n            return null;\r\n        }).\r\n        then(function(){\r\n            // notify the app that the app has been successfully initialised and is ready for further execution (set app ready flag to true)\r\n            utopiasoftware.saveup.model.isAppReady = true;\r\n            // hide the splash screen\r\n            navigator.splashscreen.hide();\r\n        }).\r\n        catch(function(){\r\n            console.log(\"GOT HERE 2\");\r\n            // provide an empty device uuid\r\n            utopiasoftware.saveup.model.deviceUUID = \"\";\r\n            // notify the app that the app has been successfully initialised and is ready for further execution (set app ready flag to true)\r\n            utopiasoftware.saveup.model.isAppReady = true;\r\n            // hide the splash screen\r\n            navigator.splashscreen.hide();\r\n\r\n            // display a toast message to let user no there is no Internet connection\r\n            window.plugins.toast.showWithOptions({\r\n                message: \"Startup Error. App functionality may be limited. Always update the app to \" +\r\n                \"get the best secure experience. Please contact us if problem continues\",\r\n                duration: 5000, // 5000 ms\r\n                position: \"bottom\",\r\n                styling: {\r\n                    opacity: 1,\r\n                    backgroundColor: '#000000',\r\n                    textColor: '#FFFFFF',\r\n                    textSize: 14\r\n                }\r\n            });\r\n        });\r\n\r\n    },\r\n\r\n    /**\r\n     * method is used to create secondary menus for some app pages.\r\n     * The secondary menus are onsen ui popover elements\r\n     *\r\n     * @param popOverQuerySelector {String} a query selector string that identifies the onsen ui popover element\r\n     *\r\n     * @param targetElem {HTMLElement} HTML element that identifies the\r\n     * target element of the app secondary menu\r\n     */\r\n    createAppSecondaryMenus: function(popOverQuerySelector, targetElem){\r\n\r\n        // show the specified popover element\r\n        $(popOverQuerySelector).get(0).show(targetElem);\r\n    },\r\n\r\n    /**\r\n     * method is triggered when an item on the App Secondary Popup Menu is clicked\r\n     *\r\n     * @param label {String} label represents clicked list item in the menu\r\n     */\r\n    appSecondaryMenuListClicked: function(label){\r\n    },\r\n\r\n    /**\r\n     * object is view-model for sign-in page\r\n     */\r\n    signInPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the sign-in page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // find all onsen-ui input targets and insert a special class to prevent materialize-css from updating the styles\r\n            $('ons-input input', $thisPage).addClass('utopiasoftware-no-style');\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.saveup.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $thisPage.get(0).onDeviceBackButton = function(){\r\n                    ons.notification.confirm('Do you want to close the app?', {title: 'Exit',\r\n                            buttonLabels: ['No', 'Yes']}) // Ask for confirmation\r\n                        .then(function(index) {\r\n                            if (index === 1) { // OK button\r\n                                navigator.app.exitApp(); // Close the app\r\n                            }\r\n                        });\r\n                };\r\n\r\n                // check if the user is currently logged in\r\n                if(window.localStorage.getItem(\"app-status\") && window.localStorage.getItem(\"app-status\") != \"\"){ // user is logged in\r\n                    // display the user's save phone number on the login page phonenumber input\r\n                    $('#login-form #user-phone').val(utopiasoftware.saveup.model.appUserDetails.phoneNumber);\r\n                }\r\n\r\n                // initialise the sign-in form validation\r\n                utopiasoftware.saveup.controller.signInPageViewModel.formValidator = $('#login-form').parsley();\r\n\r\n                // attach listener for the sign in button on the sign-in page\r\n                $('#login-signin').get(0).onclick = function(){\r\n                    // run the validation method for the sign-in form\r\n                    utopiasoftware.saveup.controller.signInPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware.saveup.controller.signInPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware.saveup.controller.signInPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware.saveup.controller.signInPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.saveup.controller.signInPageViewModel.signinFormValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n                // now that the page is being shown without the loader, start the animation of the icons\r\n                $('ons-icon.first,ons-icon.second', $thisPage).addClass('animated swing');\r\n                // wait for 4 seconds, then stop the pulse animation of the Create Account button\r\n                setTimeout(function(){$('#login-create-account', $thisPage).removeClass('pulse');}, 4000);\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the sign-in page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n                // remove any tooltip being displayed on all forms in the login page\r\n                $('#sign-in-page [data-hint]').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                $('#sign-in-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object in the sign-in page\r\n                utopiasoftware.saveup.controller.signInPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the sign-in page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n            try{\r\n                // remove any tooltip being displayed on all forms in the login page\r\n                $('#sign-in-page [data-hint]').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                $('#sign-in-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects in the login page\r\n                utopiasoftware.saveup.controller.signInPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when sign-in form is successfully validated\r\n         */\r\n        signinFormValidated: function(){\r\n            \r\n            // display the loader message to indicate is being signed in;\r\n            $('#loader-modal-message').html(\"Signing In...\");\r\n            $('#loader-modal').get(0).show(); // show loader\r\n\r\n            if(($('#login-form #user-phone').val() === utopiasoftware.saveup.model.appUserDetails.phoneNumber) &&\r\n                ($('#login-form #secure-pin').val() === utopiasoftware.saveup.model.appUserDetails.securePin)){ // user can sign in\r\n\r\n                $('#loader-modal').get(0).hide(); // hide loader\r\n                // update the first name being displayed in the side menu\r\n                $('#side-menu-username').html(utopiasoftware.saveup.model.appUserDetails.firstName);\r\n                $('ons-splitter').get(0).content.load(\"app-main-template\"); // move to the main menu\r\n                // show a toast welcoming user\r\n                Materialize.toast('Welcome ' + utopiasoftware.saveup.model.appUserDetails.firstName, 4000);\r\n            }\r\n            else{ // user cannot sign in authentication failed\r\n                $('#loader-modal').get(0).hide(); // hide loader\r\n                ons.notification.alert({title: \"Sign In Failed\",\r\n                    messageHTML: '<ons-icon icon=\"md-close-circle-o\" size=\"30px\" ' +\r\n                    'style=\"color: red;\"></ons-icon> <span>' + 'Invalid Credentials' + '</span>',\r\n                    cancelable: false\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when create account button is clicked\r\n         */\r\n        createAccountButtonClicked: function(){\r\n            // move the tab view to the Sign Up tab\r\n            $('#login-tabbar').get(0).setActiveTab(1, {animation: \"slide\"});\r\n        },\r\n\r\n        /**\r\n         * method is triggered when forgot pin button is clicked\r\n         */\r\n        forgotPinButtonClicked: function(element){\r\n            // move the tab view to the Reset PIN tab\r\n            $('#forgot-pin-popover').get(0).show(element, {});\r\n        }\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * object is view-model for create-account page\r\n     */\r\n    createAccountPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the create-account page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // find all onsen-ui input targets and insert a special class to prevent materialize-css from updating the styles\r\n            $('ons-input input', $thisPage).addClass('utopiasoftware-no-style');\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.saveup.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $thisPage.get(0).onDeviceBackButton = function(){\r\n                    // move to the first tab in the tab bar i.e sign-in page\r\n                    $('#login-tabbar').get(0).setActiveTab(0, {animation: \"slide\"});\r\n                };\r\n\r\n                // initialise the create-account form validation\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator = $('#create-account-form').parsley();\r\n\r\n                // attach listener for the create account button on the create account page\r\n                $('#create-account-button').get(0).onclick = function(){\r\n                    // run the validation method for the create account form\r\n                    utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').addClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.saveup.controller.createAccountPageViewModel.createAccountFormValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the create-account page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#create-account-page [data-hint]').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                $('#create-account-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the sign-in page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n            try{\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#create-account-page [data-hint]').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                $('#create-account-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects on the page\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when sign-in form is successfully validated\r\n         */\r\n        createAccountFormValidated: function(){\r\n\r\n            // tell the user that phoe number verification is necessary\r\n            new Promise(function(resolve, reject){\r\n                ons.notification.confirm('To complete sign up, your phone number must be verified. <br>' +\r\n                    'Usual SMS charge from your phone network provider will apply', {title: 'Verify Phone Number',\r\n                        buttonLabels: ['Cancel', 'Ok']}) // Ask for confirmation\r\n                    .then(function(index) {\r\n                        if (index === 1) { // OK button\r\n                            resolve();\r\n                        }\r\n                        else{\r\n                            reject(\"your phone number could not be verified\");\r\n                        }\r\n                    });\r\n            }).\r\n            then(function(){\r\n\r\n                return null;\r\n                //return utopiasoftware.saveup.validatePhoneNumber($('#create-phone').val());\r\n            }).\r\n            then(function(){\r\n                // display the loader message to indicate that account is being created;\r\n                $('#loader-modal-message').html(\"Completing Sign Up...\");\r\n                $('#loader-modal').get(0).show(); // show loader\r\n\r\n                // create the app user details object and persist it\r\n                utopiasoftware.saveup.model.appUserDetails = {\r\n                    firstName: $('#create-account-form #create-first-name').val(),\r\n                    lastName: $('#create-account-form #create-last-name').val(),\r\n                    phoneNumber: $('#create-account-form #create-phone').val(),\r\n                    phoneNumber_intlFormat: $('#create-account-form #create-phone').val().startsWith(\"0\") ?\r\n                        $('#create-account-form #create-phone').val().replace(\"0\", \"+234\") :\r\n                        $('#create-account-form #create-phone').val(),\r\n                securePin: $('#create-account-form #create-secure-pin').val()\r\n                };\r\n\r\n                return utopiasoftware.saveup.model.appUserDetails;\r\n            }).// TODO DON'T FORGET TO DESTROY ALL USER STORED DATA BEFORE CREATING NEW ACCOUNT. VERY IMPORTANT!!\r\n            then(function(newUser){\r\n                // create a cypher data of the user details\r\n                return Promise.resolve(intel.security.secureData.\r\n                createFromData({\"data\": JSON.stringify(newUser)}));\r\n            }).\r\n            then(function(instanceId){\r\n                    // store the cyphered data in secure persistent storage\r\n                    return Promise.resolve(\r\n                        intel.security.secureStorage.write({\"id\": \"postcash-user-details\", \"instanceID\": instanceId})\r\n                    );\r\n                }).\r\n            then(function(){\r\n                $('#loader-modal').get(0).hide(); // hide loader\r\n                // set app-status local storage (as user phone number)\r\n                window.localStorage.setItem(\"app-status\", utopiasoftware.saveup.model.appUserDetails.phoneNumber);\r\n                // update the first name being displayed in the side menu\r\n                $('#side-menu-username').html(utopiasoftware.saveup.model.appUserDetails.firstName);\r\n                $('ons-splitter').get(0).content.load(\"app-main-template\"); // move to the main menu\r\n                // show a toast informing user that account has been created\r\n                Materialize.toast('Sign Up completed! Welcome', 4000);\r\n            }).\r\n            catch(function(err){\r\n                if(typeof err !== \"string\"){ // if err is NOT a String\r\n                    err = \"Sorry. Sign Up could not be completed\"\r\n                }\r\n                $('#loader-modal').get(0).hide(); // hide loader\r\n                ons.notification.alert({title: \"Sign Up Failed\",\r\n                    messageHTML: '<ons-icon icon=\"md-close-circle-o\" size=\"30px\" ' +\r\n                    'style=\"color: red;\"></ons-icon> <span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the Create Account PIN visibility button is clicked.\r\n         * It toggles pin visibility\r\n         *\r\n         * @param buttonElement\r\n         */\r\n        pinVisibilityButtonClicked: function(buttonElement){\r\n            if($(buttonElement).attr(\"data-saveup-visible\") === \"no\"){ // pin is not visible, make it visible\r\n                $('#create-secure-pin').css(\"-webkit-text-security\", \"none\"); // change the text-security for the input field\r\n                $(buttonElement).find('ons-icon').attr(\"icon\", \"md-eye-off\"); // change the icon associated with the input\r\n                $(buttonElement).attr(\"data-saveup-visible\", \"yes\"); // flag the pin is now visible\r\n            }\r\n            else{ // make the pin not visible\r\n                $('#create-secure-pin').css(\"-webkit-text-security\", \"disc\"); // change the text-security for the input field\r\n                $(buttonElement).find('ons-icon').attr(\"icon\", \"md-eye\"); // change the icon associated with the input\r\n                $(buttonElement).attr(\"data-saveup-visible\", \"no\"); // flag the pin is now invisible\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * object is view-model for onboarding page\r\n     */\r\n    onboardingPageViewModel: {\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.saveup.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#onboarding-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n                    ons.notification.confirm('Do you want to close the app?', {title: 'Exit',\r\n                        buttonLabels: ['No', 'Yes']}) // Ask for confirmation\r\n                        .then(function(index) {\r\n                            if (index === 1) { // OK button\r\n                                navigator.app.exitApp(); // Close the app\r\n                            }\r\n                        });\r\n                };\r\n\r\n                // initialise carousel\r\n                $('#onboarding-carousel', $thisPage).carousel({dist: 0, fullWidth: true, indicators: true, noWrap: true});\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to move the onboarding presentation to the next slide\r\n         *\r\n         * @param buttonElem\r\n         */\r\n        nextSlideButtonClicked: function(buttonElem){\r\n            $('#onboarding-carousel').carousel('next'); // move to the next slide\r\n            // wait for the slide animation to complete\r\n            setTimeout(function(){\r\n                // check if this is the last slide in the presentation\r\n                if($('.carousel-item.active').is('[href=\"#three!\"]')){ // this is the last slide\r\n                    $(buttonElem).css(\"display\", \"none\"); // hide the Next button\r\n                }\r\n            }, 205);\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to end the onboarding presentation\r\n         */\r\n        endButtonClicked: function(){\r\n\r\n            // load the main menu template\r\n            $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for main-menu page\r\n     */\r\n    mainMenuPageViewModel: {\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.saveup.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n                    ons.notification.confirm('Do you want to close the app?', {title: 'Exit',\r\n                            buttonLabels: ['No', 'Yes']}) // Ask for confirmation\r\n                        .then(function(index) {\r\n                            if (index === 1) { // OK button\r\n                                navigator.app.exitApp(); // Close the app\r\n                            }\r\n                        });\r\n                };\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to listen for click events of the main menu items\r\n         *\r\n         * @param label\r\n         */\r\n        mainMenuButtonsClicked: function(label){\r\n            if(label == \"transfer cash\"){ // 'transfer cash' button was clicked\r\n\r\n                $('#app-main-navigator').get(0).pushPage(\"transfer-cash-page.html\", {}); // navigate to the transfer cash page\r\n\r\n                return;\r\n            }\r\n\r\n            if(label == \"verify account\"){ // 'verify account' button was clicked\r\n\r\n                $('#app-main-navigator').get(0).pushPage(\"verify-account-page.html\", {}); // navigate to the verify account page\r\n\r\n                return;\r\n            }\r\n\r\n            if(label == \"intro\"){ // intro button was clicked\r\n\r\n                $('ons-splitter').get(0).content.load(\"onboarding-template\"); // navigate to the onboarding presentation\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for join-savings-groups page\r\n     */\r\n    joinSavingsGroupsViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // find all onsen-ui input targets and insert a special class to prevent materialize-css from updating the styles\r\n            $('ons-input input', $thisPage).addClass('utopiasoftware-no-style');\r\n            // enable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').attr(\"swipeable\", true);\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.saveup.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n                    $('#app-main-navigator').get(0).popPage({refresh: false});\r\n                };\r\n\r\n                // initilise the select element\r\n                $('#join-savings-group-choose-group', $thisPage).material_select();\r\n\r\n                // initialise the create-account form validation\r\n                utopiasoftware.saveup.controller.joinSavingsGroupsViewModel.formValidator = $('#create-account-form').parsley();\r\n\r\n                // attach listener for the create account button on the create account page\r\n                $('#create-account-button').get(0).onclick = function(){\r\n                    // run the validation method for the create account form\r\n                    utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').addClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.saveup.controller.createAccountPageViewModel.createAccountFormValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the create-account page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#create-account-page [data-hint]').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                $('#create-account-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the sign-in page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n            try{\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#create-account-page [data-hint]').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                $('#create-account-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects on the page\r\n                utopiasoftware.saveup.controller.createAccountPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when sign-in form is successfully validated\r\n         */\r\n        createAccountFormValidated: function(){\r\n\r\n            // tell the user that phoe number verification is necessary\r\n            new Promise(function(resolve, reject){\r\n                ons.notification.confirm('To complete account creation, your phone number must be verified. <br>' +\r\n                        'Usual SMS charge from your phone network provider will apply', {title: 'Verify Phone Number',\r\n                        buttonLabels: ['Cancel', 'Ok']}) // Ask for confirmation\r\n                    .then(function(index) {\r\n                        if (index === 1) { // OK button\r\n                            resolve();\r\n                        }\r\n                        else{\r\n                            reject(\"your phone number could not be verified\");\r\n                        }\r\n                    });\r\n            }).\r\n            then(function(){\r\n                return null;\r\n                //return utopiasoftware.saveup.validatePhoneNumber($('#create-phone').val());\r\n            }).\r\n            then(function(){\r\n                $('ons-splitter').get(0).content.load(\"onboarding-template\");\r\n            }).\r\n            catch(function(err){\r\n                ons.notification.alert({title: \"Account Creation Failed\",\r\n                    messageHTML: '<ons-icon icon=\"md-close-circle-o\" size=\"30px\" ' +\r\n                    'style=\"color: red;\"></ons-icon> <span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the Create Account PIN visibility button is clicked.\r\n         * It toggles pin visibility\r\n         *\r\n         * @param buttonElement\r\n         */\r\n        pinVisibilityButtonClicked: function(buttonElement){\r\n            if($(buttonElement).attr(\"data-saveup-visible\") === \"no\"){ // pin is not visible, make it visible\r\n                $('#create-secure-pin').css(\"-webkit-text-security\", \"none\"); // change the text-security for the input field\r\n                $(buttonElement).find('ons-icon').attr(\"icon\", \"md-eye-off\"); // change the icon associated with the input\r\n                $(buttonElement).attr(\"data-saveup-visible\", \"yes\"); // flag the pin is now visible\r\n            }\r\n            else{ // make the pin not visible\r\n                $('#create-secure-pin').css(\"-webkit-text-security\", \"disc\"); // change the text-security for the input field\r\n                $(buttonElement).find('ons-icon').attr(\"icon\", \"md-eye\"); // change the icon associated with the input\r\n                $(buttonElement).attr(\"data-saveup-visible\", \"no\"); // flag the pin is now invisible\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for verify-account page\r\n     */\r\n    verifyAccountPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // find all onsen-ui input targets and insert a special class to prevent materialize-css from updating the styles\r\n            $('ons-input input', $thisPage).addClass('utopiasoftware-no-style');\r\n            // enable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').attr(\"swipeable\", true);\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.saveup.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n                    // check if the verify-account bottom sheet is open\r\n                    if($('#verify-account-bottom-sheet').data(\"saveupSheetState\") === \"open\"){ // bottom sheet is open\r\n                        $('#verify-account-bottom-sheet').modal(\"close\"); // close the bottom sheet\r\n\r\n                        return;\r\n                    }\r\n\r\n                    $('#app-main-navigator').get(0).resetToPage(\"main-menu-page.html\");\r\n                };\r\n\r\n\r\n                // initialise the form validation\r\n                utopiasoftware.saveup.controller.verifyAccountPageViewModel.formValidator = $('#verify-account-form').parsley();\r\n\r\n                // attach listener for the verify account button\r\n                $('#verify-account-button').get(0).onclick = function(){\r\n                    // run the validation method for the create account form\r\n                    utopiasoftware.saveup.controller.verifyAccountPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware.saveup.controller.verifyAccountPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').addClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware.saveup.controller.verifyAccountPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).parent().find('label:eq(0)').removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware.saveup.controller.verifyAccountPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.saveup.controller.verifyAccountPageViewModel.verifyAccountFormValidated);\r\n\r\n                // retrieve the list of banks\r\n                Promise.resolve($.ajax(\r\n                    {\r\n                        url: \"banks.json\",\r\n                        type: \"get\",\r\n                        dataType: \"json\",\r\n                        timeout: 240000 // wait for 4 minutes before timeout of request\r\n\r\n                    }\r\n                )).\r\n                then(function(bankData){\r\n                    var optionTags = \"\";\r\n                    // update the banks select element\r\n                    for(var prop in bankData){\r\n                        optionTags += '<option value=\"' + prop + '\">' + bankData[prop] + '</option>';\r\n                    }\r\n                    $('#verify-account-choose-bank', $thisPage).append(optionTags); // append all the created option tags\r\n                    // initilise the select element\r\n                    $('#verify-account-choose-bank', $thisPage).material_select();\r\n                    // initialise the character counter plugin\r\n                    $('#verify-account-number', $thisPage).characterCounter();\r\n                    // remove the progress indeterminate loader\r\n                    $('.progress', $thisPage).remove();\r\n                    // make the verify account form visible\r\n                    $('#verify-account-form', $thisPage).css(\"display\", \"block\");\r\n                    // enable the 'Verify Account' button\r\n                    $('#verify-account-button', $thisPage).removeAttr(\"disabled\");\r\n                    // hide the loader\r\n                    $('#loader-modal').get(0).hide();\r\n                }).\r\n                catch();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the create-account page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#verify-account-page [data-hint]').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                $('#verify-account-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware.saveup.controller.verifyAccountPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the sign-in page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n            try{\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#verify-account-page [data-hint]').removeClass(\"hint--always hint--info hint--medium hint--rounded hint--no-animate\");\r\n                $('#verify-account-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects on the page\r\n                utopiasoftware.saveup.controller.verifyAccountPageViewModel.formValidator.destroy();\r\n                // destroy the form inputs which need to be destroyed\r\n                $('#verify-account-choose-bank').material_select('destroy');\r\n                $('#verify-account-number').off();\r\n                $('#verify-account-number').removeData();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when verify account form is successfully validated\r\n         */\r\n        verifyAccountFormValidated: function(){\r\n\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"You cannot verify accounts without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n            // display the loader message to indicate that account is being verified;\r\n            $('#loader-modal-message').html(\"Verifying Bank Account...\");\r\n            $('#loader-modal').get(0).show(); // show loader\r\n\r\n            // request for gateway authorization token\r\n            utopiasoftware.saveup.moneyWaveObject.useToken.\r\n            then(function(tokenData){\r\n                // verify the bank account\r\n                return new Promise(function(resolve, reject){\r\n                    var verifyAccountRequest = $.ajax(\r\n                        {\r\n                            url: utopiasoftware.saveup.moneyWaveObject.gateway + \"v1/resolve/account\",\r\n                            type: \"post\",\r\n                            contentType: \"application/json\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", tokenData);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: false,\r\n                            data: JSON.stringify({\r\n                                account_number: $('#verify-account-form #verify-account-number').val(),\r\n                                bank_code: $('#verify-account-form #verify-account-choose-bank').val()\r\n                            })\r\n                        }\r\n                    );\r\n\r\n                    // server responded to account verification request\r\n                    verifyAccountRequest.done(function(responseData){\r\n                        if(responseData.status === \"success\"){ // the server responded with a successful account verification\r\n                            // set the name of the account which has been verified\r\n                            $('#verify-account-form #verify-account-name').val(responseData.data.account_name);\r\n                            resolve(); // resolve the account verification promise\r\n                        }\r\n                        else { // the server responded unsuccessfully\r\n                            reject(); // reject the account verification promise\r\n                        }\r\n                    });\r\n\r\n                    // server responded with a failure to the verification request\r\n                    verifyAccountRequest.fail(function(){\r\n                        reject(); // reject the account verification promise\r\n                    });\r\n                });\r\n            }).\r\n            then(function(){\r\n                // hide the loader modal\r\n                return $('#loader-modal').get(0).hide(); // hide loader\r\n            }).\r\n            then(function(){\r\n                // show a toast welcoming user\r\n                Materialize.toast('Bank account verified <ons-button modifier=\"quiet\" style=\"color: #82b1ff\" onclick=\"utopiasoftware.saveup.controller.verifyAccountPageViewModel.moreActions();\">More</ons-button>', 4000);\r\n                // show the result of the verification to the user\r\n                $('#verify-account-form .verify-account-success').css(\"display\", \"block\");\r\n                $('#verify-account-form .verify-account-success').addClass(\"scale-in\");\r\n            }).\r\n            catch(function(){ // inform the user that this is an invalid account number\r\n                // hide the loader modal\r\n                $('#loader-modal').get(0).hide(); // hide loader\r\n                // show the FAILED result of the verification to the user\r\n                $('#verify-account-form .verify-account-failed').css(\"display\", \"block\");\r\n                $('#verify-account-form .verify-account-failed').addClass(\"scale-in\");\r\n            });\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to specifically reset the verified account display used\r\n         * when an account has been previously verified\r\n         *\r\n         */\r\n        resetVerifiedAcctDisplay: function(){\r\n            // hide all account verification information\r\n            $('#verify-account-form .verify-account-success').css(\"display\", \"none\");\r\n            $('#verify-account-form .verify-account-success').removeClass(\"scale-in\");\r\n            $('#verify-account-form .verify-account-failed').css(\"display\", \"none\");\r\n            $('#verify-account-form .verify-account-failed').removeClass(\"scale-in\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to display the means for performing more actions upon/after\r\n         * bank account verification\r\n         */\r\n        moreActions: function(){\r\n            // display the bottom sheets\r\n            $('#verify-account-bottom-sheet').modal('open');\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to listen for clicks on the bottom sheet of the verify account page\r\n         * @param label\r\n         */\r\n        verifyAcctBottomSheetListItemClicked: function(label){}\r\n\r\n    }\r\n};\r\n"]}